#!/usr/bin/env node

var common = require('common');
var rex = require('./index');
var server = require('./server');

var alias = {ls:'list'};
var argv = process.argv.slice(2);

if (!argv.length) {
        console.error('\nusage: rex [command] file\n\nwhere command can be\n\nls        for listing available modules\nserver    for starting a server\ncompile   for parsing and compiling a file\n');
        return;
}

var cmd = function() {
	argv[0] = alias[argv[0]] || argv[0];

	if (argv[0] in {list:1, compile:1, server:1}) {
		return argv.shift();
	}
	return 'compile';
}();

var onerror = function(err) {
	console.error(err.stack);
};
var onmap = function(map) {
	var ws = 0;

	for (var name in map) {
		ws = Math.max(name.length, ws);
	}

	ws = new Array(ws+2).join(' ');

	for (var name in map) {
		console.log(name+ws.substring(name.length) + '  â†’    ' + map[name]);
	}	
};

var minify = argv.indexOf('--minify') > -1;

if (cmd === 'list') {
	rex.list(argv.pop() || '.', common.fork(onerror, onmap));
	return;
}
if (cmd === 'server') {
	var dir = argv.shift();
	var port = argv.shift();

	if (dir && /^\d+$/.test(dir)) {
		port = dir;
		dir = undefined;
	}

	server.listen(dir, port);
	return;
}
if (cmd === 'compile') {
	rex.parse(argv.shift() || './index.js', {minify:minify}, common.fork(onerror, function(js) {
		console.log(js);
	}));
	return;
}
